<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security.xsd">

    <!--http://www.networkedassets.com/configuring-spring-security-for-a-restful-web-services/-->

    <!--http://localhost:8080/SpringMvcRestSecurityExmaple/rest/products/getProductsList?j_username=admin&j_password=admin-->
    <context:annotation-config/>

    <security:global-method-security
            secured-annotations="enabled"
            jsr250-annotations="enabled"
            pre-post-annotations="enabled"
            access-decision-manager-ref="accessDecisionManager">
    </security:global-method-security>

    <!-- Disable security on static resources -->
    <security:http request-matcher="regex" pattern="/index.jsp" security="none"/>
    <security:http request-matcher="regex" pattern="/favicon.ico" security="none"/>
    <security:http request-matcher="regex" pattern="/css/style.css" security="none"/>


    <!-- Security configuration for REST services. -->
    <security:http pattern="/rest/**"
                   auto-config="false"
                   use-expressions="true"
                   authentication-manager-ref="authenticationManager"
                   entry-point-ref="restServicesEntryPoint"
                   create-session="always">

        <security:csrf disabled="true"/>

        <security:custom-filter ref="restServicesFilter"
                                before="PRE_AUTH_FILTER"/>

        <security:intercept-url pattern="/rest/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN','ROLE_SUPERADMIN')"/>

        <!-- Adds a logout filter to Spring Security filter chain -->
        <security:logout logout-url="/rest/logout"
                         delete-cookies="true"
                         invalidate-session="true"
                         success-handler-ref="restLogoutSuccessHandler"/>
    </security:http>

    <!-- Entry point for REST service. -->
    <bean id="restServicesEntryPoint"
          class="com.adarsh.spring.security.RestAuthenticationEntryPoint"/>

    <!-- Filter for REST services. -->
    <bean id="restServicesFilter"
          class="com.adarsh.spring.security.RestUsernamePasswordAuthenticationFilter">
        <property name="postOnly" value="false"/>
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationFailureHandler" ref="restAuthenticationFailureHandler"/>
        <property name="authenticationSuccessHandler" ref="restAuthenticationSuccessHandler"/>
        <property name="filterProcessesUrl" value="/rest/login"/>
        <property name="usernameParameter" value="username"/>
        <property name="passwordParameter" value="password"/>
    </bean>


    <!-- Configures a custom authentication success handler that returns HTTP status code 200 -->
    <bean id="restAuthenticationSuccessHandler"
          class="com.adarsh.spring.security.RestAuthenticationSuccessHandler">
        <property name="alwaysUseDefaultTargetUrl" value="true"/>
        <property name="defaultTargetUrl" value="/rest/login"/>
    </bean>

    <!-- Configures a custom authentication failure handler that returns HTTP status code 401 -->
    <bean id="restAuthenticationFailureHandler"
          class="com.adarsh.spring.security.RestAuthenticationFailureHandler"/>

    <!-- Configures a custom logout success handler that returns HTTP status code 200 -->
    <bean id="restLogoutSuccessHandler"
          class="com.adarsh.spring.security.RestLogoutSuccessHandler"/>

    <bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <constructor-arg name="decisionVoters">
            <list>
                <bean class="org.springframework.security.access.vote.RoleVoter">
                    <property name="rolePrefix" value=""/>
                </bean>
            </list>
        </constructor-arg>
    </bean>

    <bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
        <constructor-arg name="authenticationEntryPoint" ref="restServicesEntryPoint"/>
    </bean>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider user-service-ref="userDetailsServiceImpl"/>
        <security:authentication-provider user-service-ref="userDetailsServiceInMemo"/>
    </security:authentication-manager>

    <security:user-service id="userDetailsServiceInMemo">
        <security:user name="adarsh" password="adarsh" authorities="ROLE_SUPERADMIN"/>
        <security:user name="admin" password="admin" authorities="ROLE_ADMIN"/>
        <security:user name="user" password="user" authorities="ROLE_USER"/>
    </security:user-service>

</beans>